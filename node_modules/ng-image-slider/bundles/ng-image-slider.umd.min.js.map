{"version":3,"sources":["ng://ng-image-slider/lib/ng-image-slider.service.ts","ng://ng-image-slider/lib/ng-image-slider.component.ts","ng://ng-image-slider/lib/slider-custom-image/slider-custom-image.component.ts","ng://ng-image-slider/lib/slider-lightbox/slider-lightbox.component.ts","ng://ng-image-slider/lib/ng-image-slider.module.ts"],"names":["NgImageSliderService","prototype","isBase64","str","test","base64FileExtension","substring","length","indexOf","Injectable","youtubeRegExp","validFileExtensions","validVideoExtensions","NgImageSliderComponent","cdRef","platformId","imageSliderService","elRef","this","sliderMainDivWidth","imageParentDivWidth","imageObj","totalImages","leftPos","effectStyle","speed","sliderPrevDisable","sliderNextDisable","slideImageCount","sliderImageWidth","sliderImageHeight","sliderInnerHeight","sliderImageSizeWithPadding","autoSlideCount","showArrowButton","textDirection","imageMargin","infinite","imagePopup","videoAutoPlay","paginationShow","imageClick","EventEmitter","arrowClick","lightboxArrowClick","popupImageIndex","currentImageTitle","ligthboxShow","activeImageIndex","visiableImageIndex","lightboxNextDisable","lightboxPrevDisable","showImage","Object","defineProperty","data","hasOwnProperty","dir","imgObj","Array","map","img","index","count","Math","round","flag","undefined","onResize","event","setSliderWidth","handleKeyboardEvent","key","toLowerCase","nextImage","next","prevImage","prev","close","ngOnInit","i","unshift","ngAfterViewInit","detectChanges","isPlatformBrowser","imageAutoSlide","ngOnDestroy","autoSlideInterval","clearInterval","ngOnChanges","changes","imageSize","size","previousValue","currentValue","width","height","sliderMain","nativeElement","offsetWidth","imageDiv","nextPrevSliderButtonDisable","fullView","currentIndex","abs","imageOnClick","showLightbox","emit","_this","setInterval","imageMouseEnterHandler","infinitePrevImg","prevImg","sliderArrowDisableTeam","getVisiableIndex","infiniteNextImg","nextImg","setTimeout","pop","push","shift","imageSrc","imageTitle","getImage","nextPrevLigthboxButtonDisable","ownerDocument","body","style","overflow","message","url","title","self","currentImageSrc","fileExtension","replace","match","image","Image","onload","src","swipe","e","when","coord","changedTouches","pageX","pageY","time","Date","getTime","swipeCoord","swipeTime","direction","Component","args","selector","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","decorators","type","Inject","PLATFORM_ID","ElementRef","ViewChild","static","Input","Output","HostListener","SliderCustomImageComponent","YOUTUBE","IMAGE","VIDEO","fileUrl","isVideo","alt","SliderLightboxComponent","sanitizer","currentImageIndex","match_1","bypassSecurityTrustResourceUrl","resetState","closeLightbox","prevImageLightbox","nextImageLightbox","DomSanitizer","NgImageSliderModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgImageSliderService {\n\n    constructor() { }\n\n    isBase64(str) {\n        var base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n        return base64regex.test(str);\n\n    }\n\n    base64FileExtension(str) {\n        return str.substring(\"data:image/\".length, str.indexOf(\";base64\"));\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    OnInit,\n    OnChanges,\n    SimpleChanges,\n    SimpleChange,\n    AfterViewInit,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewEncapsulation,\n    ViewChild,\n    HostListener,\n    PLATFORM_ID,\n    Inject,\n    ElementRef\n} from '@angular/core';\n\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { NgImageSliderService } from './ng-image-slider.service';\n\nconst NEXT_ARROW_CLICK_MESSAGE = 'next',\n    PREV_ARROW_CLICK_MESSAGE = 'previous',\n    LIGHTBOX_NEXT_ARROW_CLICK_MESSAGE = 'lightbox next',\n    LIGHTBOX_PREV_ARROW_CLICK_MESSAGE = 'lightbox previous',\n    youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'ng-image-slider',\n    templateUrl: './ng-image-slider.component.html',\n    styleUrls: ['./ng-image-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgImageSliderComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n    // for slider\n    sliderMainDivWidth: number = 0;\n    imageParentDivWidth: number = 0;\n    imageObj: Array<object> = [];\n    totalImages: number = 0;\n    leftPos: number = 0;\n    effectStyle: string = 'all 1s ease-in-out';\n    speed: number = 1; // default speed in second\n    sliderPrevDisable: boolean = false;\n    sliderNextDisable: boolean = false;\n    slideImageCount: number = 1;\n    sliderImageWidth: number = 205;\n    sliderImageHeight: number = 200;\n    sliderInnerHeight: number = 175;\n    sliderImageSizeWithPadding = 211;\n    autoSlideCount: number = 0;\n    autoSlideInterval;\n    showArrowButton: boolean = true;\n    textDirection: string = 'ltr';\n    imageMargin: number = 3;\n\n    // for swipe event\n    private swipeCoord?: [number, number];\n    private swipeTime?: number;\n\n    @ViewChild('sliderMain', { static: false }) sliderMain;\n    @ViewChild('imageDiv', { static: false }) imageDiv;\n\n    // @inputs\n    @Input()\n    set imageSize(data) {\n        if (data\n            && typeof (data) === 'object') {\n            if (data.hasOwnProperty('space') && typeof (data['space']) === 'number' && data['space'] > -1) {\n                this.imageMargin = data['space'];\n            }\n            if (data.hasOwnProperty('width') && typeof (data['width']) === 'number') {\n                this.sliderImageWidth = data['width'];\n                this.sliderImageSizeWithPadding = data['width'] + (this.imageMargin * 2); // addeing padding with image width\n            }\n            if (data.hasOwnProperty('height') && typeof (data['height']) === 'number') {\n                this.sliderImageHeight = data['height'];\n                this.sliderInnerHeight = data['height'] - 30;\n            }\n        }\n    }\n    @Input() infinite: boolean = false;\n    @Input() imagePopup: boolean = true;\n    @Input()\n    set direction(dir: string) {\n        if (dir) {\n            this.textDirection = dir;\n        }\n    }\n    @Input()\n    set animationSpeed(data: number) {\n        if (data\n            && typeof (data) === 'number'\n            && data >= 0.1\n            && data <= 5) {\n            this.speed = data;\n            this.effectStyle = `all ${this.speed}s ease-in-out`;\n        }\n    }\n    @Input() set images(imgObj) {\n        if (imgObj && imgObj instanceof Array && imgObj.length) {\n            this.imageObj = imgObj.map((img, index) => {\n                img['index'] = index + 1;\n                return img;\n            });\n            this.totalImages = this.imageObj.length;\n            this.imageParentDivWidth = imgObj.length * this.sliderImageSizeWithPadding;\n        }\n    }\n    @Input() set slideImage(count) {\n        if (count && typeof count === 'number') {\n            this.slideImageCount = Math.round(count);\n        }\n    }\n    @Input() set autoSlide(count) {\n        if (count && typeof count === 'number' && count >= 1 && count <= 5) {\n            this.autoSlideCount = Math.round(count) * 1000;\n        }\n    }\n    @Input() set showArrow(flag) {\n        if (flag !== undefined && typeof flag === 'boolean') {\n            this.showArrowButton = flag;\n        }\n    }\n    @Input() videoAutoPlay: boolean = false;\n    @Input() paginationShow: boolean = false;\n\n    // @Outputs\n    @Output() imageClick = new EventEmitter<number>();\n    @Output() arrowClick = new EventEmitter<string>();\n    @Output() lightboxArrowClick = new EventEmitter<object>();\n\n    // for lightbox\n    currentImageSrc: string;\n    popupImageIndex: number = 0;\n    currentImageTitle = '';\n    ligthboxShow: boolean = false;\n    activeImageIndex: number = 0;\n    visiableImageIndex: number = 1;\n    lightboxNextDisable: boolean = false;\n    lightboxPrevDisable: boolean = false;\n    showImage: boolean = true;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.setSliderWidth();\n    }\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if (event && event.key) {\n            if (event.key.toLowerCase() === 'arrowright') { \n                if(this.ligthboxShow) {\n                    this.nextImage();\n                } else {\n                    this.next();\n                }\n            }\n\n            if (event.key.toLowerCase() === 'arrowleft') {\n                if (this.ligthboxShow) {\n                    this.prevImage();\n                } else {\n                    this.prev();\n                }\n            }\n\n            if (event.key.toLowerCase() === 'escape' && this.ligthboxShow) {\n                this.close();\n            }\n        }\n    }\n\n    constructor(\n        private cdRef: ChangeDetectorRef,\n        @Inject(PLATFORM_ID) private platformId: Object,\n        public imageSliderService: NgImageSliderService,\n        private elRef: ElementRef\n        // @Inject(ElementRef) private _elementRef: ElementRef\n    ) {\n    }\n\n    ngOnInit() {\n        // @TODO: for future use\n        // console.log(this._elementRef)\n\n        // for slider\n        if (this.infinite) {\n            this.effectStyle = 'none';\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n            for (let i = 1; i <= this.slideImageCount; i++) {\n                this.imageObj.unshift(this.imageObj[this.imageObj.length - i]);\n            }\n        }\n    }\n\n    // for slider\n    ngAfterViewInit() {\n        this.setSliderWidth();\n        this.cdRef.detectChanges();\n        if (isPlatformBrowser(this.platformId)) {\n            this.imageAutoSlide();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.autoSlideInterval) {\n            clearInterval(this.autoSlideInterval);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes && changes.imageSize) {\n            const size: SimpleChange = changes.imageSize;\n            if (size\n                && size.previousValue\n                && size.currentValue\n                && size.previousValue.width && size.previousValue.height\n                && size.currentValue.width && size.currentValue.height\n                && (size.previousValue.width !== size.currentValue.width\n                    || size.previousValue.height !== size.currentValue.height)) {\n                this.setSliderWidth();\n            }\n        }\n    }\n\n    setSliderWidth() {\n        if (this.sliderMain && this.sliderMain.nativeElement && this.sliderMain.nativeElement.offsetWidth) {\n            this.sliderMainDivWidth = this.sliderMain.nativeElement.offsetWidth;\n            //this.sliderImageWidth = this.sliderMain.nativeElement.offsetWidth;\n            //this.sliderImageSizeWithPadding = this.sliderMain.nativeElement.offsetWidth;\n            this.imageParentDivWidth = this.imageObj.length * this.sliderImageSizeWithPadding;\n        }\n        if (this.imageDiv && this.imageDiv.nativeElement && this.imageDiv.nativeElement.offsetWidth) {\n            this.leftPos = this.infinite ? -1 * this.sliderImageSizeWithPadding * this.slideImageCount : 0;\n        }\n        this.nextPrevSliderButtonDisable();\n    }\n\n    fullView() {\n        const currentIndex = Math.round((Math.abs(this.leftPos) + this.sliderImageWidth) / this.sliderImageWidth);\n        this.imageOnClick(currentIndex - 1)\n    }\n\n    imageOnClick(index) {\n        if (this.imagePopup) {\n            this.activeImageIndex = index;\n            this.showLightbox();\n        }\n        this.imageClick.emit(index);\n    }\n\n    imageAutoSlide() {\n        if (this.infinite && this.autoSlideCount && !this.ligthboxShow) {\n            this.autoSlideInterval = setInterval(() => {\n                this.next();\n            }, this.autoSlideCount);\n        }\n    }\n\n    imageMouseEnterHandler() {\n        if (this.infinite && this.autoSlideCount && this.autoSlideInterval) {\n            clearInterval(this.autoSlideInterval);\n        }\n    }\n\n    prev() {\n        if (!this.sliderPrevDisable) {\n            if (this.infinite) {\n                this.infinitePrevImg();\n            } else {\n                this.prevImg();\n            }\n\n            this.arrowClick.emit(PREV_ARROW_CLICK_MESSAGE);\n            this.sliderArrowDisableTeam();\n            this.getVisiableIndex();\n        }\n    }\n\n    next() {\n        if (!this.sliderNextDisable) {\n            if (this.infinite) {\n                this.infiniteNextImg();\n            } else {\n                this.nextImg();\n            }\n\n            this.arrowClick.emit(NEXT_ARROW_CLICK_MESSAGE);\n            this.sliderArrowDisableTeam();\n            this.getVisiableIndex();\n        }\n    }\n\n    prevImg() {\n        if (0 >= this.leftPos + (this.sliderImageSizeWithPadding * this.slideImageCount)) {\n            this.leftPos += this.sliderImageSizeWithPadding * this.slideImageCount;\n        } else {\n            this.leftPos = 0;\n        }\n    }\n\n    nextImg() {\n        if ((this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth > this.sliderImageSizeWithPadding * this.slideImageCount) {\n            this.leftPos -= this.sliderImageSizeWithPadding * this.slideImageCount;\n        } else if ((this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth > 0) {\n            this.leftPos -= (this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth;\n        }\n    }\n\n    infinitePrevImg() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        this.leftPos = 0;\n\n        setTimeout(() => {\n            this.effectStyle = 'none';\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n            for (let i = 0; i < this.slideImageCount; i++) {\n                this.imageObj.unshift(this.imageObj[this.imageObj.length - this.slideImageCount - 1]);\n                this.imageObj.pop();\n            }\n        }, this.speed * 1000);\n    }\n\n    infiniteNextImg() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        this.leftPos = -2 * this.sliderImageSizeWithPadding * this.slideImageCount;\n        setTimeout(() => {\n            this.effectStyle = 'none';\n            for (let i = 0; i < this.slideImageCount; i++) {\n                this.imageObj.push(this.imageObj[this.slideImageCount]);\n                this.imageObj.shift();\n            }\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n        }, this.speed * 1000);\n    }\n\n    getVisiableIndex() {\n        const currentIndex = Math.round((Math.abs(this.leftPos) + this.sliderImageWidth) / this.sliderImageWidth);\n        if (this.imageObj[currentIndex - 1] && this.imageObj[currentIndex - 1]['index']) {\n            this.visiableImageIndex = this.imageObj[currentIndex - 1]['index'];\n        }\n    }\n\n    /**\n     * Disable slider left/right arrow when image moving\n     */\n    sliderArrowDisableTeam() {\n        this.sliderNextDisable = true;\n        this.sliderPrevDisable = true;\n        setTimeout(() => {\n            this.nextPrevSliderButtonDisable();\n        }, this.speed * 1000);\n    }\n\n    nextPrevSliderButtonDisable() {\n        this.sliderNextDisable = false;\n        this.sliderPrevDisable = false;\n        if (!this.infinite) {\n            if (this.imageParentDivWidth + this.leftPos <= this.sliderMainDivWidth) {\n                this.sliderNextDisable = true;\n            }\n\n            if (this.leftPos >= 0) {\n                this.sliderPrevDisable = true;\n            }\n        }\n    }\n\n    // for lightbox\n    showLightbox() {\n        if (this.imageObj.length && (this.imageObj[0]['image'] || this.imageObj[0]['video'])) {\n            let imageSrc = this.imageObj[0]['image'] || this.imageObj[0]['video'],\n                imageTitle = this.imageObj[0]['title'] || '';\n            this.popupImageIndex = this.imageObj[0]['index'] || 1;\n            if (this.imageObj[this.activeImageIndex]) {\n                imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n                imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n                this.popupImageIndex = this.imageObj[this.activeImageIndex]['index'] || 1;\n            }\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.imageMouseEnterHandler();\n            this.ligthboxShow = true;\n            this.elRef.nativeElement.ownerDocument.body.style.overflow = 'hidden';\n        }\n    }\n\n    nextImage() {\n        if (this.infinite && this.activeImageIndex + 1 >= this.imageObj.length) {\n            this.activeImageIndex = 0;\n        }\n\n        if (this.activeImageIndex + 1 < this.imageObj.length\n            && this.imageObj[this.activeImageIndex + 1]\n            && (this.imageObj[this.activeImageIndex + 1]['image']\n                || this.imageObj[this.activeImageIndex + 1]['video'])) {\n            this.activeImageIndex++;\n            const imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n            const imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            this.popupImageIndex = this.imageObj[this.activeImageIndex]['index'] || 1;\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.lightboxArrowClick.emit({\n                message: LIGHTBOX_NEXT_ARROW_CLICK_MESSAGE,\n                index: this.activeImageIndex\n            });\n        }\n    }\n\n    prevImage() {\n        if (this.infinite && this.activeImageIndex - 1 <= 0) {\n            this.activeImageIndex = this.imageObj.length;\n        }\n\n        if (this.activeImageIndex - 1 > -1\n            && this.imageObj[this.activeImageIndex - 1]\n            && (this.imageObj[this.activeImageIndex - 1]['image']\n                || this.imageObj[this.activeImageIndex - 1]['video'])) {\n            this.activeImageIndex--;\n            const imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n            const imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            this.popupImageIndex = this.imageObj[this.activeImageIndex]['index'] || 1;\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.lightboxArrowClick.emit({\n                message: LIGHTBOX_PREV_ARROW_CLICK_MESSAGE,\n                index: this.activeImageIndex\n            });\n        }\n    }\n\n    nextPrevLigthboxButtonDisable() {\n        this.lightboxNextDisable = false;\n        this.lightboxPrevDisable = false;\n        if (!this.infinite) {\n            if (this.activeImageIndex >= this.imageObj.length - 1) {\n                this.lightboxNextDisable = true;\n            }\n\n            if (this.activeImageIndex <= 0) {\n                this.lightboxPrevDisable = true;\n            }\n        }\n    }\n\n    close() {\n        this.ligthboxShow = false;\n        this.elRef.nativeElement.ownerDocument.body.style.overflow = '';\n        this.imageAutoSlide();\n    }\n\n    getImage(url, title = '') {\n        const self = this;\n        this.currentImageSrc = '';\n        this.showImage = false;\n        if (url) {\n            let fileExtension = url.replace(/^.*\\./, '');\n            if (this.imageSliderService.base64FileExtension(url)\n                && (validFileExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1\n                    || validVideoExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1)) {\n                fileExtension = this.imageSliderService.base64FileExtension(url);\n            }\n            // verify for youtube and video url\n            const match = url.match(youtubeRegExp);\n            if ((match && match[2].length === 11)\n                || (fileExtension && validVideoExtensions.indexOf(fileExtension.toLowerCase()) > -1)) {\n                this.currentImageSrc = url;\n                this.currentImageTitle = title;\n                this.showImage = true;\n            } else if (fileExtension && validFileExtensions.indexOf(fileExtension.toLowerCase()) > -1) {\n                const image = new Image();\n                image.onload = function () {\n                    setTimeout(() => {\n                        self.currentImageSrc = url;\n                        self.currentImageTitle = title;\n                        self.showImage = true;\n                    }, 0);\n                };\n                image.src = url;\n            }\n        }\n    }\n\n    /**\n     * Swipe event handler\n     * Reference from https://stackoverflow.com/a/44511007/2067646\n     */\n    swipe(e: TouchEvent, when: string): void {\n        const coord: [number, number] = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const time = new Date().getTime();\n\n        if (when === 'start') {\n            this.swipeCoord = coord;\n            this.swipeTime = time;\n        } else if (when === 'end') {\n            const direction = [coord[0] - this.swipeCoord[0], coord[1] - this.swipeCoord[1]];\n            const duration = time - this.swipeTime;\n\n            if (duration < 1000 //\n                && Math.abs(direction[0]) > 30 // Long enough\n                && Math.abs(direction[0]) > Math.abs(direction[1] * 3)) { // Horizontal enough\n                if (direction[0] < 0) {\n                    this.next();\n                } else {\n                    this.prev();\n                }\n            }\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Input\n} from '@angular/core';\nimport { NgImageSliderService } from './../ng-image-slider.service';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'custom-img',\n    templateUrl: './slider-custom-image.component.html'\n})\nexport class SliderCustomImageComponent implements OnInit, AfterViewInit, OnDestroy {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @inputs\n    @Input()\n    set imageUrl(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileUrl = url;\n            this.fileExtension = url.replace(/^.*\\./, '');\n            if (this.imageSliderService.base64FileExtension(url) \n            && (validFileExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1 \n            || validVideoExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1)) {\n                this.fileExtension = this.imageSliderService.base64FileExtension(url);\n            }\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                this.type = this.YOUTUBE;\n                this.fileUrl = `https://img.youtube.com/vi/${match[2]}/0.jpg`;\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.VIDEO;\n            }\n        }\n    }\n    @Input() isVideo = false;\n    @Input() alt: String = '';\n    @Input() title: String = '';\n    @Input() direction: string = 'ltr';\n\n    constructor(public imageSliderService: NgImageSliderService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    HostListener\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { NgImageSliderService } from './../ng-image-slider.service';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'slider-lightbox',\n    templateUrl: './slider-lightbox.component.html'\n})\nexport class SliderLightboxComponent implements OnInit, AfterViewInit, OnDestroy {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl: SafeResourceUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @Inputs\n    @Input() videoAutoPlay: boolean = false;\n    @Input()\n    set currentImageSrc(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileExtension = url.replace(/^.*\\./, '');\n            if (this.imageSliderService.base64FileExtension(url)\n                && (validFileExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1\n                    || validVideoExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1)) {\n                this.fileExtension = this.imageSliderService.base64FileExtension(url);\n            }\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                this.type = '';\n                setTimeout(() => {\n                    this.type = this.YOUTUBE;\n                    url = `${'//www.youtube.com/embed/'}${match[2]}${this.videoAutoPlay ? '?autoplay=1' : '?autoplay=0'}`;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n                }, 50);\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n                this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = '';\n                setTimeout(() => {\n                    this.type = this.VIDEO;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n                }, 50);\n            } else {\n                this.fileUrl = false;\n            }\n        } else {\n            this.fileUrl = false;\n        }\n    }\n    @Input() currentImageTitle;\n    @Input() currentImageIndex: number = 1;\n    @Input() totalImages: number = 0;\n    @Input() paginationShow: boolean = false;\n    @Input() showImage;\n    @Input() lightboxPrevDisable;\n    @Input() lightboxNextDisable;\n    @Input() direction: string = 'ltr';\n\n    // @Output\n    @Output() close = new EventEmitter<any>();\n    @Output() prevImage = new EventEmitter<any>();\n    @Output() nextImage = new EventEmitter<any>();\n\n    /* @ViewChild('lightboxDiv') lightboxDiv;\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        const widthAspectRatio = 16 / 9;\n        const heightAspectRatio = 9 / 16;\n        console.log('this.lightboxDiv.nativeElement.offsetWidth', this.lightboxDiv.nativeElement.offsetWidth);\n        console.log('this.lightboxDiv.nativeElement.offsetHeight', this.lightboxDiv.nativeElement.offsetHeight);\n        if (this.lightboxDiv.nativeElement.offsetWidth && this.lightboxDiv.nativeElement.offsetHeight) {\n            const calculatedWidth = 480 * (this.lightboxDiv.nativeElement.offsetWidth / this.lightboxDiv.nativeElement.offsetHeight);\n            const calculatedHeight = 385 * (this.lightboxDiv.nativeElement.offsetHeight / this.lightboxDiv.nativeElement.offsetWidth);\n            console.log('calculated widht and height =>', calculatedWidth, calculatedHeight);\n\n        }\n    } */\n\n    constructor(private sanitizer: DomSanitizer, public imageSliderService: NgImageSliderService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n        this.resetState();\n    }\n\n    closeLightbox() {\n        this.close.emit();\n    }\n\n    prevImageLightbox() {\n        this.prevImage.emit();\n    }\n\n    nextImageLightbox() {\n        this.nextImage.emit();\n    }\n\n    resetState() {\n        this.fileUrl = '';\n        this.fileExtension = '';\n        this.type = this.IMAGE;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgImageSliderComponent } from './ng-image-slider.component';\nimport { SliderCustomImageComponent } from './slider-custom-image/slider-custom-image.component';\nimport { SliderLightboxComponent } from './slider-lightbox/slider-lightbox.component';\nimport { NgImageSliderService } from './ng-image-slider.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NgImageSliderComponent,\n        SliderCustomImageComponent,\n        SliderLightboxComponent\n    ],\n    providers: [\n        NgImageSliderService\n    ],\n    exports: [NgImageSliderComponent]\n})\nexport class NgImageSliderModule { }\n"]}